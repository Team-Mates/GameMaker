<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lookingVar = direction
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Movement

mySpeed = 210 / room_speed

if keyboard_check(ord('W')) {
    y = y - mySpeed
}

if keyboard_check(ord('S')) {
    y = y + mySpeed
}

if keyboard_check(ord('A')) {
    x = x - mySpeed
}

if keyboard_check(ord('D')) {
    x = x + mySpeed
}

// Orientation

//image_angle = point_direction(x,y,mouse_x,mouse_y)
//lookingVar = direction

if keyboard_check(vk_left) {
    lookingVar = lookingVar+3
}
if keyboard_check(vk_right) {
    lookingVar = lookingVar-3
}

image_angle = lookingVar


// Firing

if keyboard_check(vk_space){

    myBullet = instance_create(x, y,oBullet)
    audio_play_sound(aShoot, 1, false)
    
    myBullet.direction = image_angle
    myBullet.speed = 600 / room_speed
    myBullet.image_angle = image_angle
    
    
}

// Bounds
if y &lt; 0 {
    y = room_height
}
if y &gt; room_height {
    y = 0
}

if x &lt; 0{
    x = room_width
} 
if x &gt; room_width {
    x = 0
}


// DEATH!!!!

enemyTouch = instance_place(x, y, oAsteroid)
if instance_exists(enemyTouch) {
    chunksTotal = 15
    chunksCreated = 0
    chunkSpeed = 1000 / room_speed
    while(chunksCreated &lt; chunksTotal){
        newChunk = instance_create(x, y, oPlayerChunk)
        newChunk.direction = random(360)
        newChunk.speed = random_range(chunkSpeed * 0.5, chunkSpeed)
        chunksCreated = chunksCreated + 1
    }
    instance_destroy()
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
